from oConsole import oConsole;
def fPrintUsage(asApplicationKeywords):
  oConsole.fPrint(15,"Usage:");
  oConsole.fPrint();
  oConsole.fPrint(15,"  BugId.py [options] \"path\\to\\binary.exe\" [arguments]");
  oConsole.fPrint("    Start the binary in the debugger with the provided arguments.");
  oConsole.fPrint();
  oConsole.fPrint(15,"  BugId.py [options] application [additional arguments]");
  oConsole.fPrint("    (Where \"application\" is a known application keyword, see below)");
  oConsole.fPrint("    Start the application identified by the keyword in the debugger");
  oConsole.fPrint("    using the application's default command-line and arguments followed");
  oConsole.fPrint("    by the additional arguments provided and apply application specific");
  oConsole.fPrint("    settings.");
  oConsole.fPrint();
  oConsole.fPrint(15,"  BugId.py [options] application=\"path\\to\\binary.exe\" [arguments]");
  oConsole.fPrint("    Start the application identified by the keyword in the debugger");
  oConsole.fPrint("    using the provided binary and arguments and apply application specific");
  oConsole.fPrint("    settings. (i.e. the application's default command-line is ignored in");
  oConsole.fPrint("    favor of the provided binary and arguments).");
  oConsole.fPrint();
  oConsole.fPrint(15,"  BugId.py [options] --pids=[comma separated list of process ids]");
  oConsole.fPrint("    Attach debugger to the process(es) provided in the list. The processes must");
  oConsole.fPrint("    all have been suspended, as they will be resumed by the debugger.");
  oConsole.fPrint();
  oConsole.fPrint("Options are of the form --[name]=[JSON value]. Note that you may need to do a");
  oConsole.fPrint("bit of quote-juggling because Windows likes to eat quotes from the JSON value");
  oConsole.fPrint("for no obvious reason. So, if you want to specify --a=\"b\", you will need to");
  oConsole.fPrint("use \"--a=\\\"b\\\"\", or BugId will see --a=b (b is not valid JSON). *sigh*");
  oConsole.fPrint(15,"  --forever");
  oConsole.fPrint("    Restart the application to run another test as soon as the application is");
  oConsole.fPrint("    terminated. Useful when testing the reliability of a repro, detecting the");
  oConsole.fPrint("    various crashes a non-deterministic repro can cause or while making ");
  oConsole.fPrint("    modifications to the repro in order to test how they affect the crash.");
  oConsole.fPrint("    A statistics file is created or updated after each run that contains the");
  oConsole.fPrint("    number of occurances of each Bug Id that was detected.");
  oConsole.fPrint(15,"  --isa=x86|x64");
  oConsole.fPrint("    Use the x86 or x64 version of cdb to debug the application. The default is");
  oConsole.fPrint("    to use the ISA of the OS. Applications build to run on x86 systems can be");
  oConsole.fPrint("    debugged using the x64 version of cdb, but symbol resolution may fail and");
  oConsole.fPrint("    results may vary. You are strongly encouraged to use the same ISA for the");
  oConsole.fPrint("    debugger as the application. (ISA = Instruction Set Architecture)");
  oConsole.fPrint(15,"  --bGenerateReportHTML=false");
  oConsole.fPrint("    Do not save a HTML formatted crash report. This should make BugId run");
  oConsole.fPrint("    faster, as it does not need to gather and process as much information as");
  oConsole.fPrint("    needed when creating the HTML report.");
  oConsole.fPrint(15,"  --fast");
  oConsole.fPrint("    Fast: disable report and symbol servers. This is an alias for");
  oConsole.fPrint("        --bGenerateReportHTML=false");
  oConsole.fPrint("        --asSymbolServerURLs=[]");
  oConsole.fPrint("        --Bugid.bUse_NT_SYMBOL_PATH=false");
  oConsole.fPrint("    If you only need to confirm a crash can be reproduced, you may want to use");
  oConsole.fPrint("    this: it can make the process of analyzing a crash a lot faster. But if");
  oConsole.fPrint("    no local or cached symbols are available, you'll get less information");
  oConsole.fPrint(15,"  \"--sReportFolderPath=\\\"BugId\\\"\"");
  oConsole.fPrint("    Save report to the specified folder, in this case \"BugId\". The quotes");
  oConsole.fPrint("    mess is needed because of the Windows quirck explained above.");
  oConsole.fPrint("You can also adjust cBugId specific settings, such as:");
  oConsole.fPrint(15,"  --cBugId.bSaveDump=true");
  oConsole.fPrint("    Save a dump file when a crash is detected.");
  oConsole.fPrint(15,"  --cBugId.bOutputStdIO=true --cBugId.bOutputStdErr=true");
  oConsole.fPrint("    Show verbose cdb input / output during debugging.");
  oConsole.fPrint(15,"  --cBugId.asSymbolServerURLs=[\"http://msdl.microsoft.com/download/symbols\"]");
  oConsole.fPrint("    Use http://msdl.microsoft.com/download/symbols as a symbol server.");
  oConsole.fPrint(15,"  --cBugId.asSymbolCachePaths=[\"C:\\Symbols\"]");
  oConsole.fPrint("    Use C:\\Symbols to cache symbol files.");
  oConsole.fPrint("  See dxConfig.py and srv\dxBugIdConfig.py for a list of settings that you can");
  oConsole.fPrint("  change. All values must be valid JSON of the appropriate type. No checks are");
  oConsole.fPrint("  made to ensure this. Providing illegal values may result in exceptions at any");
  oConsole.fPrint("  time during execution. You have been warned.");
  oConsole.fPrint();
  oConsole.fPrint("Known application keywords:");
  asLine = ["  "];
  uLineLength = 2;
  for sApplicationKeyword in asApplicationKeywords:
    if uLineLength > 2:
      if uLineLength + 2 + len(sApplicationKeyword) + 2 > 80:
        asLine += [7, ","];
        oConsole.fPrint(*asLine);
        asLine = ["  "];
        uLineLength = 2;
      else:
        asLine += [7, ", "];
        uLineLength += 2;
    asLine += [15, sApplicationKeyword];
    uLineLength += len(sApplicationKeyword);
  asLine += [7, "."];
  oConsole.fPrint(*asLine);
  oConsole.fPrint();
  oConsole.fPrint("Run ",15,"BugId.py application?",7," for an overview of the application specific command");
  oConsole.fPrint("line arguments and settings.");
